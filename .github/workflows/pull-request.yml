name: Code quality and security

on:
  pull_request:
    paths:
      - '**.tf'
  workflow_dispatch:

jobs:
  run_tflint:
    name: Terraform linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache plugin directory
        uses: actions/cache@v3
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run_trivy:
    name: Terraform security scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: 1
          scan-ref: .
          scan-type: config

  terraform_validate:
    name: Terraform format and validation
    needs:
      - run_tflint
      - run_trivy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Detect Terraform version
        run: printf "TF_VERSION=%s" "$(cat .terraform-version)" >> "$GITHUB_ENV"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate -no-color
